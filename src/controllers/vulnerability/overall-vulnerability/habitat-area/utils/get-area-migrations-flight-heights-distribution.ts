import {
  Feature,
  featureCollection,
  MultiPolygon,
  Polygon,
} from "@turf/helpers";
import { MigrationPath } from "../../../../migrations/types";
import { sortBy } from "lodash";
import { pointsWithinPolygon } from "@turf/turf";

export const getAreaMigrationsFlightHeightsDistribution = (
  area: Feature<Polygon | MultiPolygon>,
  migrations: MigrationPath[]
): [number, number][] => {
  const migrationsPoints = migrations.flatMap((migration) =>
    migration.features.map((point) => point)
  );
  const areaMigrationsPoints = pointsWithinPolygon(
    featureCollection(migrationsPoints),
    area
  );
  const flightHeightsMap = areaMigrationsPoints.features.reduce<
    Map<number, number>
  >((acc, point) => {
    const pointAltitude = point.properties.altitude;
    if (pointAltitude) {
      acc.set(pointAltitude, (acc.get(pointAltitude) || 0) + 1);
    }
    return acc;
  }, new Map());
  return sortBy(
    Array.from(flightHeightsMap.entries()).map(([y, dy]) => [
      y,
      dy / areaMigrationsPoints.features.length,
    ]),
    [0]
  );
};
