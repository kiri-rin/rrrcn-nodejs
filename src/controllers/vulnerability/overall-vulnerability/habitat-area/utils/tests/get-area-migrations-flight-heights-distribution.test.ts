import { getAreaMigrationsFlightHeightsDistribution } from "../get-area-migrations-flight-heights-distribution";
import { MigrationPath } from "../../../../../migrations/types";
import { Feature, MultiPolygon, Polygon } from "@turf/helpers";
import testMigrationsJson from "@rrrcn/common/src/test-configs/vulnerabilities/test-migrations.json";
import testAreaJson from "@rrrcn/common/src/test-configs/vulnerabilities/test-area.json";
import { sum } from "lodash";
const testArea = testAreaJson as unknown as Feature<Polygon | MultiPolygon>;
const testMigrations = [testMigrationsJson] as unknown as MigrationPath[];
test("area migrations flight heights", () => {
  const flightHeights = getAreaMigrationsFlightHeightsDistribution(
    testArea,
    testMigrations
  );
  expect(flightHeights).toBeDefined();
  expect(flightHeights).toEqual(expect.any(Array));
  flightHeights.forEach((value, index) => {
    expect(value).toEqual([expect.any(Number), expect.any(Number)]);
    index && expect(value[0]).toBeGreaterThan(flightHeights[index - 1][0]);
    expect(value[1]).toBeLessThanOrEqual(1);
  });
  expect(sum(flightHeights.map((it) => it[1]))).toBeCloseTo(1, 1);
});
